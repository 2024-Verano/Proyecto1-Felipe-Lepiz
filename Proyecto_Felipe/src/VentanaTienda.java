
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VentanaTienda extends javax.swing.JFrame {

    /**
     * Creates new form VentanaTienda
     */
    public VentanaTienda() {
        initComponents();
        llenarTabla();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnClienteNuevo = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblMostrarNombre = new javax.swing.JLabel();
        lblMostrarTipo = new javax.swing.JLabel();
        lblMostrarPrecio = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblMostrarID = new javax.swing.JLabel();
        lblMostrarCantidad = new javax.swing.JLabel();
        btnServicio = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblMostrarTamanno = new javax.swing.JLabel();
        btnModificarCuenta = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lblMostrarMarca = new javax.swing.JLabel();
        btnFacturas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(112, 145, 255));

        btnClienteNuevo.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnClienteNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/clienteNuevo.png"))); // NOI18N
        btnClienteNuevo.setText("Agregar Cliente");
        btnClienteNuevo.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnClienteNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteNuevoActionPerformed(evt);
            }
        });

        btnVolver.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logout.png"))); // NOI18N
        btnVolver.setText("Cerrar Sesion");
        btnVolver.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Tipo", "Precio", "Cantidad", "Tamano", "Marca"
            }
        ));
        tblProductos.getTableHeader().setReorderingAllowed(false);
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Productos Disponibles: ");

        btnAgregar.setBackground(new java.awt.Color(0, 0, 0));
        btnAgregar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/addMore.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Producto seleccionado");

        btnModificar.setBackground(new java.awt.Color(0, 0, 0));
        btnModificar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 51));
        btnEliminar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnComprar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tipo: ");

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Precio:");

        jLabel6.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cantidad: ");

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ID:");

        btnServicio.setText("Servicio");
        btnServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServicioActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tamano: ");

        btnModificarCuenta.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnModificarCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/manejarCuenta.png"))); // NOI18N
        btnModificarCuenta.setText("Cuentas");
        btnModificarCuenta.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnModificarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCuentaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Marca: ");

        btnFacturas.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnFacturas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/facturas.png"))); // NOI18N
        btnFacturas.setText("Ver facturas");
        btnFacturas.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacturasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(152, 152, 152)
                                .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMostrarTamanno, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMostrarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMostrarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMostrarPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMostrarID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMostrarCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMostrarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnModificarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClienteNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnFacturas, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnServicio))
                            .addComponent(btnAgregar)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(179, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClienteNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFacturas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregar)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnServicio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblMostrarID)
                            .addComponent(btnModificar))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(lblMostrarMarca)))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblMostrarNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblMostrarTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblMostrarPrecio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblMostrarCantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblMostrarTamanno))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnComprar))
                .addGap(140, 140, 140))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClienteNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteNuevoActionPerformed
        CrearCliente ventanaCliente = new CrearCliente();
        this.setVisible(false);
        ventanaCliente.setVisible(true);
    }//GEN-LAST:event_btnClienteNuevoActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.setVisible(false);
        VentanaLoginn ventanLogin = new VentanaLoginn();
        ventanLogin.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void llenarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProductos.getModel();
        modeloTabla.setRowCount(0);
        
        int i = 0;
        for(Articulo articulo : Articulo.getArticulos()){
            modeloTabla.insertRow(i, new Object[]{ 
                articulo.getCodigo(), 
                articulo.getNombre(), 
                articulo.getTipo(), 
                articulo.getPrecio(), 
                articulo.getCantidad(),
               (articulo.getTamanno() <= 0) ? "N/A" : articulo.getTamanno(),
               articulo.getMarca()
            });
        }
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        VentanaAgregarProducto ventanaAgregarProducto = new VentanaAgregarProducto();
        this.setVisible(false);
        ventanaAgregarProducto.setVisible(true);
        
                
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try{
            DefaultTableModel modeloTabla = (DefaultTableModel) tblProductos.getModel();
            int filaSeleccionada = tblProductos.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un artículo para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // Validar que los valores no sean null
            Object idObj = modeloTabla.getValueAt(filaSeleccionada, 0);
            Object nombreObj = modeloTabla.getValueAt(filaSeleccionada, 1);
            Object tipoObj = modeloTabla.getValueAt(filaSeleccionada, 2);
            Object precioObj = modeloTabla.getValueAt(filaSeleccionada, 3);
            Object cantidadObj = modeloTabla.getValueAt(filaSeleccionada, 4);
            Object tamannoObj = modeloTabla.getValueAt(filaSeleccionada, 5);
            Object marcaObj = modeloTabla.getValueAt(filaSeleccionada, 6);

            if (idObj == null || nombreObj == null || tipoObj == null || precioObj == null) {
                JOptionPane.showMessageDialog(this, "La fila seleccionada contiene datos vacíos", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
             
            String id = idObj.toString();
            String nombre = nombreObj.toString();
            String tipo = tipoObj.toString();
            String precio = precioObj.toString();
            String cantidad = cantidadObj.toString();
            String tamanno = tamannoObj.toString();
            String marca = marcaObj.toString();

            // Validar que los strings no estén vacíos
            if (id.trim().isEmpty() || nombre.trim().isEmpty() || tipo.trim().isEmpty() || precio.trim().isEmpty() || tamanno.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "La fila seleccionada contiene campos vacíos", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            try {
                int codigoArticulo = Integer.parseInt(id);
                int precioInt = Integer.parseInt(precio);
                int cantidadInt = Integer.parseInt(cantidad); 
                int tamannoInt = tamanno.equals("N/A") ? 0 : Integer.parseInt(tamanno);
                Articulo articulo = Articulo.buscarArticuloCodigo(codigoArticulo);
                if(articulo == null){
                    JOptionPane.showMessageDialog(this, "Algo salio mal.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            
                articulo.modificarArticulo(codigoArticulo, nombre, tipo, marca, precioInt, cantidadInt, tamannoInt);
                llenarTabla();
             } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error en el formato de los números", "Error", JOptionPane.ERROR_MESSAGE);
             }
            
            }catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Error al leer los datos de la fila: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            // Verificar que haya una fila seleccionada
            int filaSeleccionada = tblProductos.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un artículo para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Obtener el código del artículo
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este servicio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(confirmacion == JOptionPane.YES_OPTION){
                int codigo = Integer.parseInt(lblMostrarID.getText());

                // Eliminar el artículo de la lista
                Articulo.eliminarArticulo(codigo);
                
                // Eliminar la fila correspondiente de la tabla
                DefaultTableModel modeloTabla = (DefaultTableModel) tblProductos.getModel();
                modeloTabla.removeRow(filaSeleccionada);

                JOptionPane.showMessageDialog(this, "Artículo eliminado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                lblMostrarID.setText("");
                lblMostrarNombre.setText("");
                lblMostrarTipo.setText("");
                lblMostrarPrecio.setText("");
                lblMostrarCantidad.setText("");
                lblMostrarTamanno.setText("");
                lblMostrarMarca.setText("");
            }
     
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Algo salio mal", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void facturaElectronica(String correo, String mensaje) {
        // Configuración del correo
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.trust", "smtp.gmail.com");

        final String remitente = "tiendatec178@gmail.com"; // Cambia al correo del remitente
        final String contraAPP = "yexyujhzdxldyqes";       // Contraseña de aplicación

        try {
            // Crear la sesión
            Session session = Session.getInstance(props, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(remitente, contraAPP);
                }
            });

            // Crear el mensaje
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(remitente));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(correo));
            message.setSubject("Factura Electrónica");

            // Crear el cuerpo del mensaje
            MimeBodyPart textPart = new MimeBodyPart();
            textPart.setText(mensaje);

            // Crear una estructura multipart para el correo
            Multipart multipart = new MimeMultipart();
            multipart.addBodyPart(textPart);

            // Asignar el contenido al mensaje
            message.setContent(multipart);

            // Enviar el mensaje
            Transport.send(message);

            JOptionPane.showMessageDialog(null, "La factura se envió correctamente al correo: " + correo, "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al enviar la factura: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        // Validar que los datos del artículo estén presentes
        String id = lblMostrarID.getText().trim();
        String nombre = lblMostrarNombre.getText().trim();
        String tipo = lblMostrarTipo.getText().trim();
        String precio = lblMostrarPrecio.getText().trim();
        String cantidad = lblMostrarCantidad.getText().trim();
        String tamanno = lblMostrarTamanno.getText().trim();

        if (id.isEmpty() || nombre.isEmpty() || tipo.isEmpty() || precio.isEmpty() || cantidad.isEmpty() || tamanno.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Asegúrese de seleccionar un artículo.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int codigoArticulo, precioArticulo, stockActual;
        try {
            codigoArticulo = Integer.parseInt(id);
            precioArticulo = Integer.parseInt(precio);
            stockActual = Integer.parseInt(cantidad);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error en los datos del artículo. Verifique el formato de los valores numéricos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Solicitar el código del cliente
        String codigo = JOptionPane.showInputDialog(null, "Ingrese su código de cliente:", "Compra", JOptionPane.QUESTION_MESSAGE);
        if (codigo == null){
            return;
        }
        else if (codigo.trim().isEmpty()) {
            return; 
        }

        int codigoCliente;
        try {
            codigoCliente = Integer.parseInt(codigo.trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El código del cliente debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verificar si el cliente existe
        Cliente cliente = Cliente.buscarClienteCodigo(codigoCliente);
        if (cliente == null) {
            JOptionPane.showMessageDialog(null, "No existe un cliente con el código ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Solicitar la cantidad a comprar
        String cantidadCompraStr = JOptionPane.showInputDialog(null, "Ingrese la cantidad a comprar:", "Compra", JOptionPane.QUESTION_MESSAGE);
        if (cantidadCompraStr == null || cantidadCompraStr.trim().isEmpty()) {
            return; 
        }

        int cantidadCompra;
        try {
            cantidadCompra = Integer.parseInt(cantidadCompraStr.trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La cantidad a comprar debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar stock disponible
        if (stockActual < cantidadCompra) {
            JOptionPane.showMessageDialog(null, "No se puede comprar más de lo que hay en stock.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Calcular el total de la compra
        int subTotal = cantidadCompra * precioArticulo;
        int impuesto = (int) (subTotal * 0.13); // 13% de impuesto
        int total = subTotal + impuesto;

        // Actualizar stock del artículo
        Articulo articuloComprar = Articulo.buscarArticuloNombre(nombre);
        if (articuloComprar != null) {
            articuloComprar.setCantidad(stockActual - cantidadCompra);
        }

        // Crear la factura
        LocalDate fechaRecibido = LocalDate.now(); // Fecha actual
        Factura factura = new Factura(codigoArticulo, codigoCliente, cantidadCompra, fechaRecibido, subTotal, precioArticulo, impuesto, total);
        factura.agregarFactura(factura);
        cliente.facturar();
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("Factura.txt", true))) {
            writer.write("=== Encabezado de la Factura ===");
            writer.newLine();
            writer.write(factura.datosFactura());
            writer.newLine();
            writer.write("=== Detalles de la Factura ===");
            writer.newLine();
            writer.write(factura.detallesFactura());
            writer.newLine();
            writer.write("-------------------------------");
            writer.newLine();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al escribir en el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(null, "Compra realizada con éxito. Total a pagar: " + total, "Éxito", JOptionPane.INFORMATION_MESSAGE);
        llenarTabla();
        
        int confirmar = JOptionPane.showConfirmDialog(null, "Desea factura electronica?");
        if(confirmar == JOptionPane.YES_OPTION){
            String correo = cliente.getCorreo();
            String mensajeFactura = "=== Encabezado de la Factura ===\n" +
                        factura.datosFactura() + "\n" +
                        "=== Detalles de la Factura ===\n" +
                        factura.detallesFactura() + "\n" +
                        "-------------------------------";
            facturaElectronica(correo, mensajeFactura);
            
        }
        
    }//GEN-LAST:event_btnComprarActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        int filaSeleccionada = tblProductos.getSelectedRow();

        if(filaSeleccionada != -1) {
            try {
                DefaultTableModel modeloTabla = (DefaultTableModel) tblProductos.getModel();

                // Validar que los valores no sean null
                Object idObj = modeloTabla.getValueAt(filaSeleccionada, 0);
                Object nombreObj = modeloTabla.getValueAt(filaSeleccionada, 1);
                Object tipoObj = modeloTabla.getValueAt(filaSeleccionada, 2);
                Object precioObj = modeloTabla.getValueAt(filaSeleccionada, 3);
                Object cantidadObj = modeloTabla.getValueAt(filaSeleccionada, 4);
                Object tamannoObj = modeloTabla.getValueAt(filaSeleccionada, 5);
                Object marcaObj = modeloTabla.getValueAt(filaSeleccionada, 6);

                if (idObj == null || nombreObj == null || tipoObj == null || precioObj == null) {
                    JOptionPane.showMessageDialog(this, "La fila seleccionada contiene datos vacíos", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    return;
                }
             
                String id = idObj.toString();
                String nombre = nombreObj.toString();
                String tipo = tipoObj.toString();
                String precio = precioObj.toString();
                String cantidad = cantidadObj.toString();
                String tamanno = tamannoObj.toString();
                String marca = marcaObj.toString();

                // Validar que los strings no estén vacíos
                if (id.trim().isEmpty() || nombre.trim().isEmpty() || tipo.trim().isEmpty() || precio.trim().isEmpty() || tamanno.trim().isEmpty()) {JOptionPane.showMessageDialog(this, 
                        "La fila seleccionada contiene campos vacíos", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                lblMostrarID.setText(id);
                lblMostrarNombre.setText(nombre);
                lblMostrarTipo.setText(tipo);
                lblMostrarPrecio.setText(precio);
                lblMostrarCantidad.setText(cantidad);
                lblMostrarTamanno.setText(tamanno);
                lblMostrarMarca.setText(marca);
                
            } 
            catch (Exception e) {
                JOptionPane.showMessageDialog(this, 
                    "Error al leer los datos de la fila: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }

    }//GEN-LAST:event_tblProductosMouseClicked

    private void btnServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServicioActionPerformed
        VentanaRegistroServicioMantenimiento ventanaServicio = new VentanaRegistroServicioMantenimiento();
        this.setVisible(false);
        ventanaServicio.setVisible(true);
    }//GEN-LAST:event_btnServicioActionPerformed

    private void btnModificarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCuentaActionPerformed
       
        VentanaModificarCuenta ventanaModificarCuenta = new VentanaModificarCuenta();
        this.setVisible(false);
        ventanaModificarCuenta.setVisible(true);
    }//GEN-LAST:event_btnModificarCuentaActionPerformed

    private void btnFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacturasActionPerformed
        VentanaFacturas ventanaFacturas = new VentanaFacturas();
        this.setVisible(false);
        ventanaFacturas.setVisible(true);
    }//GEN-LAST:event_btnFacturasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaTienda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnClienteNuevo;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFacturas;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnModificarCuenta;
    private javax.swing.JButton btnServicio;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMostrarCantidad;
    private javax.swing.JLabel lblMostrarID;
    private javax.swing.JLabel lblMostrarMarca;
    private javax.swing.JLabel lblMostrarNombre;
    private javax.swing.JLabel lblMostrarPrecio;
    private javax.swing.JLabel lblMostrarTamanno;
    private javax.swing.JLabel lblMostrarTipo;
    private javax.swing.JTable tblProductos;
    // End of variables declaration//GEN-END:variables
}
