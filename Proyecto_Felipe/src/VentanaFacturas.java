
//commit
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VentanaFacturas extends javax.swing.JFrame {

    /**
     * Creates new form VentanaFacturas
     */
    public VentanaFacturas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoFactura = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFactura = new javax.swing.JTable();
        btnAnular = new javax.swing.JButton();
        btnReactivar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(112, 145, 255));

        btnVolver.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/previous.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar por numero de Factura:");

        txtCodigoFactura.setBackground(new java.awt.Color(204, 204, 204));
        txtCodigoFactura.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCodigoFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoFacturaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buscar por nombre: ");

        txtNombre.setBackground(new java.awt.Color(204, 204, 204));
        txtNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buscar por fecha de factura: ");

        txtFecha.setBackground(new java.awt.Color(204, 204, 204));
        txtFecha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblFactura.setBorder(new javax.swing.border.MatteBorder(null));
        tblFactura.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        tblFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Num. Factura", "Estado", "Fecha Recibido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFactura);

        btnAnular.setBackground(new java.awt.Color(153, 153, 153));
        btnAnular.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnAnular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/anular.png"))); // NOI18N
        btnAnular.setText("Anular");
        btnAnular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularActionPerformed(evt);
            }
        });

        btnReactivar.setBackground(new java.awt.Color(0, 153, 153));
        btnReactivar.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnReactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/redo.png"))); // NOI18N
        btnReactivar.setText("Reactivar");
        btnReactivar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReactivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCodigoFactura, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(txtFecha)
                            .addComponent(txtNombre))
                        .addGap(101, 101, 101)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnAnular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnReactivar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscar))
                            .addGap(20, 20, 20)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnReactivar)))
                .addGap(18, 18, 18)
                .addComponent(btnAnular)
                .addGap(85, 85, 85)
                .addComponent(btnVolver)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.setVisible(false);
        VentanaTienda ventanaTienda = new VentanaTienda();
        ventanaTienda.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtCodigoFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoFacturaActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String codigoFactura = txtCodigoFactura.getText().trim();
        String nombreCliente = txtNombre.getText().trim();
        String fecha = txtFecha.getText().trim();
        List<Factura> facturasEncontrados = new ArrayList<>();

        // Validar que al menos un campo tenga datos
        if (codigoFactura.isEmpty() && nombreCliente.isEmpty() && fecha.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar al menos un campo para realizar la búsqueda.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Buscar por código si se ingresó
            if (!codigoFactura.isEmpty()) {
                int codigo = Integer.parseInt(codigoFactura);
                Factura factura = Factura.buscarFacturaNumero(codigo);
                if(factura != null){
                    facturasEncontrados.add(factura);
                }
            }

            // Buscar por nombre si se ingresó
            if (!nombreCliente.isEmpty()) {
                Factura factura = Factura.buscarFacturaCliente(nombreCliente);
                if(factura != null){
                    facturasEncontrados.add(factura);
                    Cliente cliente = Cliente.buscarClienteNombre(nombreCliente);
                  
                    for(Factura f : Factura.getFacturas()){
                        if(cliente.isFactura() && (!facturasEncontrados.contains(f))){
                            facturasEncontrados.add(f);
                        }
                    }
                }
            }
            
            //Buscar por fecha si se ingreso
            if(!fecha.isEmpty()){
                // Validar y convertir fecha
                LocalDate fechaFactura;
                try {
                    fechaFactura = LocalDate.parse(txtFecha.getText().strip(), DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                    if (LocalDate.now().getYear() - fechaFactura.getYear() > 90) {
                        JOptionPane.showMessageDialog(null, "No existe esa fecha", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    Factura factura = Factura.buscarFacturaFecha(fechaFactura);
                    if(factura != null){
                        facturasEncontrados.add(factura);
                        for(Factura f : Factura.getFacturas()){
                            if(f.getFechaRecibido().equals(fechaFactura) && (!facturasEncontrados.contains(f))){
                                facturasEncontrados.add(f);
                            }
                        }
                    }
                } catch (DateTimeParseException e) {
                    JOptionPane.showMessageDialog(null, "Fecha inválida. Use el formato yyyy-MM-dd.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Verificar si se encontraron clientes
            if (facturasEncontrados.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No se encontró ningún cliente con los datos ingresados.", "Sin resultados", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Mostrar los clientes encontrados en la tabla
            DefaultTableModel modeloTabla = (DefaultTableModel) tblFactura.getModel();
            modeloTabla.setRowCount(0); // Limpiar la tabla
            
            for(Factura f : facturasEncontrados){
                modeloTabla.addRow(new Object[]{
                    f.getNumeroFactura(),
                    f.isEstado() ? "Abierto" : "Cerrado",
                    f.getFechaRecibido(),
                });
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El código debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al realizar la búsqueda: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Seguro que desea anular esta factura?");
        if (confirmacion == JOptionPane.YES_OPTION) {
            DefaultTableModel modeloTabla = (DefaultTableModel) tblFactura.getModel();
            int filaSeleccionada = tblFactura.getSelectedRow();

            // Verificar si se ha seleccionado una fila
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try {
                // Obtener el número de la factura de la fila seleccionada
                int numeroFactura = Integer.parseInt(tblFactura.getValueAt(filaSeleccionada, 0).toString());

                // Buscar la factura por su número
                Factura factura = Factura.buscarFacturaNumero(numeroFactura);
                if (factura == null) {
                    JOptionPane.showMessageDialog(null, "Factura no encontrada.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Anular la factura
                factura.anularFactura(numeroFactura);
                JOptionPane.showMessageDialog(null, "Factura anulada correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                
                modeloTabla.setValueAt("Cerrado", filaSeleccionada, 1);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocurrió un error al realizar la operación: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAnularActionPerformed

    private void btnReactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReactivarActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Seguro que desea reactivar esta factura?");
        if (confirmacion == JOptionPane.YES_OPTION) {
            DefaultTableModel modeloTabla = (DefaultTableModel) tblFactura.getModel();
            int filaSeleccionada = tblFactura.getSelectedRow();

            // Verificar si se ha seleccionado una fila
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try {
                // Obtener el número de la factura de la fila seleccionada
                int numeroFactura = Integer.parseInt(tblFactura.getValueAt(filaSeleccionada, 0).toString());

                // Buscar la factura por su número
                Factura factura = Factura.buscarFacturaNumero(numeroFactura);
                if (factura == null) {
                    JOptionPane.showMessageDialog(null, "Factura no encontrada.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // reactivar la factura
                factura.setEstadoAbierto();
                JOptionPane.showMessageDialog(null, "Factura reactivada correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                
                modeloTabla.setValueAt("Abierto", filaSeleccionada, 1);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocurrió un error al realizar la operación: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnReactivarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaFacturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnular;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnReactivar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFactura;
    private javax.swing.JTextField txtCodigoFactura;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
